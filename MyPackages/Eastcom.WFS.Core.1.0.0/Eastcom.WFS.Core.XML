<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Eastcom.WFS.Core</name>
    </assembly>
    <members>
        <member name="T:Eastcom.WFS.AppDirectoryInfo">
            <summary>
            当前应用的文件夹信息
            </summary>
        </member>
        <member name="P:Eastcom.WFS.AppDirectoryInfo.BaseDirectory">
            <summary>
            获取当前主程序的运行文件夹
            </summary>
        </member>
        <member name="T:Eastcom.WFS.ConfigForm.BindControls.FlowButton">
            <summary>
            在网页上显示下压按钮控件
            </summary>
        </member>
        <member name="M:Eastcom.WFS.ConfigForm.BindControls.FlowButton.ExcuteAllAct">
            <summary>
            是否正常执行了动作
            </summary>
            <remarks>
            只要有动作需要执行,就会自动组装好级客户端的提示信息.
            并会在执行成功无错时,自动执行(this.Page as IListPageHandler).CloseUserControlAtLayerWindow()
            </remarks>
            <returns>无动作执行时,返回null, 有动作则返回执行后的结果</returns>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowButton.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowButton.ValidationActCodes">
            <summary>
            验证方法
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowButton.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="T:Eastcom.WFS.ConfigForm.BindControls.FlowCheckBox">
            <summary>
            显示允许用户选择 true 或 false 条件的复选框。
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowCheckBox.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowCheckBox.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="T:Eastcom.WFS.ConfigForm.BindControls.FlowCheckBoxList">
            <summary>
            创建多项选择复选框组，该复选框组可以通过将控件绑定到数据源动态创建。
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowCheckBoxList.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowCheckBoxList.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="T:Eastcom.WFS.ConfigForm.BindControls.FlowDropDownList">
            <summary>
            表示允许用户从下拉列表中选择一项的控件。
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowDropDownList.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowDropDownList.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="T:Eastcom.WFS.ConfigForm.BindControls.FlowHiddenField">
            <summary>
            表示用于存储非显示值的隐藏字段
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowHiddenField.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowHiddenField.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="T:Eastcom.WFS.ConfigForm.BindControls.FlowImageButton">
            <summary>
            显示图像并对图像上的鼠标单击作出响应的控件。
            </summary>
        </member>
        <member name="M:Eastcom.WFS.ConfigForm.BindControls.FlowImageButton.ExcuteAllAct">
            <summary>
            是否正常执行了动作
            </summary>
            <remarks>
            只要有动作需要执行,就会自动组装好级客户端的提示信息.
            并会在执行成功无错时,自动执行(this.Page as IListPageHandler).CloseUserControlAtLayerWindow()
            </remarks>
            <returns>无动作执行时,返回null, 有动作则返回执行后的结果</returns>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowImageButton.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowImageButton.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowLabel.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowLabel.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="M:Eastcom.WFS.ConfigForm.BindControls.FlowLinkButton.ExcuteAllAct">
            <summary>
            是否正常执行了动作
            </summary>
            <remarks>
            只要有动作需要执行,就会自动组装好级客户端的提示信息.
            并会在执行成功无错时,自动执行(this.Page as IListPageHandler).CloseUserControlAtLayerWindow()
            </remarks>
            <returns>无动作执行时,返回null, 有动作则返回执行后的结果</returns>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowLinkButton.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowLinkButton.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowLiteral.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowLiteral.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowPanel.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowPanel.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowRadioButton.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowRadioButton.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="T:Eastcom.WFS.ConfigForm.BindControls.FlowRadioButtonList">
            <summary>
            表示封装一组单选按钮控件的列表控件
            </summary>
        </member>
        <member name="M:Eastcom.WFS.ConfigForm.BindControls.FlowRadioButtonList.#ctor">
            <summary>
            构造列表控件
            </summary>
        </member>
        <member name="M:Eastcom.WFS.ConfigForm.BindControls.FlowRadioButtonList.OnInit(System.EventArgs)">
            <summary>
            初始化内建文本框的ID
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Eastcom.WFS.ConfigForm.BindControls.FlowRadioButtonList.OnLoad(System.EventArgs)">
            <summary>
            对关联的Input赋值
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowRadioButtonList.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowRadioButtonList.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="T:Eastcom.WFS.ConfigForm.BindControls.FlowTextBox">
            <summary>
            为用户输入显示一个文本框控件。
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowTextBox.JSBindTemplate">
            <summary>
            JS绑定模板,支持$id$来代表本控件的ClientID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigForm.BindControls.FlowTextBox.ReloadOutputData">
            <summary>
            始终输出最新的Output值
            </summary>
        </member>
        <member name="M:Eastcom.WFS.ConfigForm.DataZone.Submit">
            <summary>
            执行Input对象的Submit动作
            </summary>
            <returns></returns>
        </member>
        <member name="T:Eastcom.WFS.ConfigList.TableList">
            <summary>
            
            </summary>
        </member>
        <member name="M:Eastcom.WFS.ConfigList.TableList.AppendSorting(System.String)">
            <summary>
            追加新的排序要求,并将追加的排序要求做为最优先的排序要求来安排,实现无限次的组合排序
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigList.TableList.WhereSQL">
            <summary>
            补充查询条件
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigList.TableList.WhereSQLPart">
            <summary>
            前置查询条件
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigList.TableList.OrderBySQL">
            <summary>
            排序SQL
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigList.TableList.LastOrderColumnName">
            <summary>
            最后排序的列名
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigList.TableList.LastOrderTypeSQL">
            <summary>
            最后排序类型(倒序或升序)
            </summary>
        </member>
        <member name="P:Eastcom.WFS.ConfigList.TableList.EnableViewState">
            <summary>
            在禁用掉childTable的ViewState的前提下,始终打开ViewState
            </summary>
        </member>
        <member name="T:Eastcom.WFS.OutputConsole">
            <summary>
            操作过程监控控制台
            用于实现暂存中间执行信息
            </summary>
            <remarks>
            在有错时，可由页面Page类来自动执行写日志动作
            每个线程采用独立的队列来存储执行消息
            </remarks>
        </member>
        <member name="M:Eastcom.WFS.OutputConsole.AppendLine(System.String)">
            <summary>
            往当前线程追加一行操作信息
            </summary>
            <remarks>会追加开始行</remarks>
            <param name="line">操作信息，建议格式:***执行**动作 ***，关键状态变量：**,**</param>
        </member>
        <member name="M:Eastcom.WFS.OutputConsole.End">
            <summary>
            往当前线程追加结尾信息行
            </summary>
        </member>
        <member name="M:Eastcom.WFS.OutputConsole.AppendErrorLine(System.String)">
            <summary>
            往当前线程追加一行操作失败的信息，HasError方法
            </summary>
            <param name="line">出错信息内容</param>
        </member>
        <member name="M:Eastcom.WFS.OutputConsole.HasError">
            <summary>
            是否有往当前线程追加一行操作失败的信息
            </summary>
            <returns>返回是否存在过这样的记录</returns>
        </member>
        <member name="M:Eastcom.WFS.OutputConsole.Clear">
            <summary>
            清除当前线程的队列内容，同时清除当前线程的错误状态
            </summary>
        </member>
        <member name="P:Eastcom.WFS.OutputConsole.Value">
            <summary>
            读取当前线程中的所有消息内容
            </summary>
            <remarks>
            如果出错，将在首行追加== ERROR ==标识
            如果没有追加过消息内容或Clear()方法执行后，则返回空
            </remarks>
        </member>
        <member name="M:Eastcom.WFS.WebControls.ControlLoader.LoadControl(System.String)">
            <summary>
            直接装载指定控件，并更新为最新的ControlUri属性值，用于回发时直接装载
            </summary>
            <param name="controlUri">控件的Uri地址</param>
        </member>
        <member name="M:Eastcom.WFS.WebControls.ControlLoader.OnTestLoadControl(System.Web.UI.Control,System.String@)">
            <summary>
            对装载的控件进行有效性检查
            </summary>
            <param name="myControl">准备装载的控件</param>
            <param name="needControlClassName">需要装载的控件class名称</param>
            <returns>是否为有效的控件</returns>
        </member>
        <member name="M:Eastcom.WFS.WebControls.ControlLoader.OnInit(System.EventArgs)">
            <summary>
            在初始化时，装载ControlUri属性值对应的控件
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Eastcom.WFS.WebControls.ControlLoader.ControlUri">
            <summary>
            需要装载的控件
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebControls.ControlLoader.MyControl">
            <summary>
            获取最新装载的控件
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebControls.CopyBoundField.Eastcom#WFS#WebControls#ICopyField#IsPrimaryKey">
            <summary>
            是否主键列
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebControls.CopyBoundField.ClientVisible">
            <summary>
            是否客户端可见,一旦设置为false,HeaderStyle.CssClass与ItemStyle.CssClass将设置为hidden
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebControls.CopyTemplateField.Eastcom#WFS#WebControls#ICopyField#IsPrimaryKey">
            <summary>
            是否主键列
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebControls.CopyTemplateField.ClientVisible">
            <summary>
            是否客户端可见,一旦设置为false,HeaderStyle.CssClass与ItemStyle.CssClass将设置为hidden
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WebControls.FormLoader">
            <summary>
            表单控件装载器
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WebControls.FormLoader.OnTestLoadControl(System.Web.UI.Control,System.String@)">
            <summary>
            检查准备装载的控件是否为表单控件
            </summary>
            <param name="myControl">准备装载的控件</param>
            <param name="needControlClassName">需要装载的控件class名称，返回Eastcom.WFS.WebControls.ConfigFormUserControl</param>
            <returns>是否为有效的控件Eastcom.WFS.WebControls.ConfigFormUserControl类型的用户控件</returns>
        </member>
        <member name="P:Eastcom.WFS.WebControls.FormLoader.FormControl">
            <summary>
            装载了的表单控件
            </summary>
        </member>
        <!-- 对于成员“M:Eastcom.WFS.WebControls.LayerWindow.GetClientCloseScript”忽略有格式错误的 XML 注释 -->
        <member name="M:Eastcom.WFS.WebControls.LayerWindow.GetClientShowScript">
            <summary>
            取客户端打开的脚本，务必保证
            </summary>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.WebControls.LayerWindow.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            将使用/?、?/的ASCII码值代替"{" 、"}"的字符串转换为{}
            </summary>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="P:Eastcom.WFS.WebControls.LayerWindow.ClientID">
            <summary>
            支持TargetClientID设置
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebControls.LayerWindow.TargetClientID">
            <summary>
            目标输出客户端ID
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebControls.LayerWindow.Left">
            <summary>
            左边坐标
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebControls.LayerWindow.Top">
            <summary>
            右边坐标
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WebControls.MonthSelecter">
            <summary>
            实现某年某月的选择
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebControls.MonthSelecter.SelectedValue">
            <summary>
            选择月份段,格式为yyyyMM-yyyyMM
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WebControls.MonthSpanSelecter">
            <summary>
            实现某年某月至某年某月的选择
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebControls.MonthSpanSelecter.SelectedValue">
            <summary>
            选择月份段,格式为yyyyMM-yyyyMM
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WebSecurity.ILoginUser.SignOut">
            <summary>
            注销
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.ILoginUser.ID">
            <summary>
            只读,标识
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.ILoginUser.OrgID">
            <summary>
            只读,组织标识
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.ILoginUser.OrgAddress">
            <summary>
            只读,组织全名称
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.ILoginUser.CityID">
            <summary>
            只读,21地市标识
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.ILoginUser.IsLoginOK">
            <summary>
            只读,是否已经正常登录
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.ILoginUser.LoginID">
            <summary>
            只读,登录用户名
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.ILoginUser.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.SESSION_CODE_OF_LOGIN_INFO">
            <summary>
            用于存储登录信息的标识
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.instanceOfWindowsApplication">
            <summary>
            windows认证时的当前登录用户实例
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.TryToLogin(System.String,System.String,System.Boolean)">
            <summary>
            使用配置的Membership.Provider来实现登录，并登记Session缓存
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="createPersistentCookie"></param>
        </member>
        <member name="M:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.ChangePassword(System.String,System.String,System.String)">
            <summary>
            使用配置的Membership.Provider来变更密码
            </summary>
            <param name="username"></param>
            <param name="oldPassword"></param>
            <param name="newPassword"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.SaveToSession(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            将指定信息组装成当前用户的完整信息并保存到Session
            </summary>
            <param name="id"></param>
            <param name="loginID"></param>
            <param name="name"></param>
            <param name="orgID"></param>
            <param name="orgAddress"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.SignOut">
            <summary>
            安全注销当前用户,即登录后
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.ID">
            <summary>
            只读,标识
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.IsLoginOK">
            <summary>
            只读,是否已经正常登录
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.LoginID">
            <summary>
            只读,登录用户名
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.Name">
            <summary>
            只读,网名/姓名
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.OrgID">
            <summary>
            只读,组织标识
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.OrgAddress">
            <summary>
            只读,组织全名称
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.CityID">
            <summary>
            只读,地市标识
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WebSecurity.CurrentLoginUserReader.Instance">
            <summary>
            当前登录用户的实例信息
            </summary>
            <remarks>
            暂定凡是username中包含\字符的,则认为是windows认证登录,不到User表中去查询实际用户信息
            </remarks>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.EnumRights.None">
            <summary>
            无权限
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.EnumRights.View">
            <summary>
            查阅
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.EnumRights.Add">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.EnumRights.Change">
            <summary>
            更新/配置
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.EnumRights.Delete">
            <summary>
            删除/失效/休眠
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.EnumRights.Import">
            <summary>
            导入数据
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.EnumRights.Check">
            <summary>
            审核确认
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.EnumRights.Export">
            <summary>
            查看报表/下载统计
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WebSecurity.EnumRights.Licensed">
            <summary>
            权限配置
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WebSecurity.RightsCodeParser">
            <summary>
            操作权限单一值变多值的解析器
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WebSecurity.RightsCodeParser.#ctor(System.Int32)">
            <summary>
            直接以特定权限值为标识来创建权限判定器
            </summary>
            <param name="rightValue">EnumRightCode的组合权限值</param>
        </member>
        <member name="M:Eastcom.WFS.WebSecurity.RightsCodeParser.HasRight(Eastcom.WFS.WebSecurity.EnumRights)">
            <summary>
            判定是否拥有某种权限
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.WebSecurity.RightsCodeParser.ReadRight(System.Int32)">
            <summary>
            将数据库中的值识别为通用任务的权限判定的种类
            </summary>
            <param name="rightValue">EnumRightCode的组合权限值</param>
            <returns></returns>
        </member>
        <member name="T:Eastcom.WFS.WFSData.ActivityOperatorInfo">
            <summary>
            流程流转过程中的活动中可操作人信息
            体现的是操作人，职能角色组，操作地市所有员工，三组分类的并集。
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSData.ActivityOperatorInfo.UserIDArray">
            <summary>
            所有可操作的人的ID数组
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSData.ActivityOperatorInfo.ResponsibilityRoleIDArray">
            <summary>
            所有可操作的职能角色组的ID数组
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSData.ActivityOperatorInfo.DomainIDArray">
            <summary>
            所有可操作的地市所有员工的所属地市ID数组
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSData.ActivityOperatorInfo.UserIDs">
            <summary>
            所有可操作的人的ID数组
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSData.ActivityOperatorInfo.ResponsibilityRoleIDs">
            <summary>
            所有可操作的职能角色组的ID数组
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSData.ActivityOperatorInfo.DomainIDs">
            <summary>
            所有可操作的地市所有员工的所属地市ID数组
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSData.IListPageHandler">
            <summary>
            列表页需要实现的接口
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSData.KeyValuePairDataProvider">
            <summary>
            用于提供给下拉框、多个单选框、多个多选框等需要键值对结构的数据源的数据提供者的基类
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSData.KeyValuePairDataProvider.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dataSourceControlUniqueID">用于绑定的数据源控件ID</param>
        </member>
        <member name="M:Eastcom.WFS.WFSData.KeyValuePairDataProvider.ToLoad">
            <summary>
            提供键值对的列表数据，需要实现
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSData.KeyValuePairDataProvider.data">
            <summary>
            用于存储数据
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSData.IWFSDataItemGetter">
            <summary>
            TODO 蔡明金 单元测试完后需改为internal
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSData.IWFSDataItemGetter.GetPropertyStringValue(System.String,System.String)">
            <summary>
            取当前实例对象指定属性的get动作返回的值并格式化为字符串
            </summary>
            <param name="fieldName">属性名称</param>
            <param name="formatCode">格式化字符串</param>
            <returns>返回格式化后的字符串</returns>
        </member>
        <member name="M:Eastcom.WFS.WFSData.IWFSDataItemGetter.GetPropertyValue(System.String)">
            <summary>
            取当前实例对象指定属性的get动作返回的值的object形式
            </summary>
            <param name="fieldName">属性名称</param>
            <returns>返回属性值</returns>
        </member>
        <member name="T:Eastcom.WFS.WFSData.IWFSDataItemSetter">
            <summary>
            TODO 蔡明金 单元测试完后需改为internal
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSData.WFSGroupDataObject.convertErrors">
            <summary>
            转换失败时用于程序调试的通知消息列表
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSData.WFSGroupDataObject.viewErrors">
            <summary>
            转换失败时用于呈现给用户看的通知消息列表
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSData.QuerySQLWherePageProvider.isAutoInvokeListButtonAct">
            <summary>
            列表按钮点击时是否自动去调用args.CommandCode同名方法
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSData.QuerySQLWherePageProvider.ReadParametersAndClear">
            <summary>
            加载已经有变更的属性做为DbCommand cmd执行时参数,并且清空变更列表
            </summary>
            <param name="cmd">正在装载的执行体</param>
        </member>
        <member name="P:Eastcom.WFS.WFSData.QuerySQLWherePageProvider.DefaultWhereSQL">
            <summary>
            默认绑定的筛选条件
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSData.QuerySQLWherePageProvider.DefaultOrderBySQL">
            <summary>
            默认绑定的排序条件
            </summary>
        </member>
        <member name="M:Eastcom.WFS.Serialization.JSONConverterExtensions.ConvertToObjectWithJSON``1(System.String)">
            <summary>
            默认使用UTF-8编码来解析
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jsonString"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.Serialization.JSONConverterExtensions.ConvertToJsonString(System.Object)">
            <summary>
            默认使用UTF-8编码
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.Serialization.JSONConverterExtensions.ToSimpleJsonString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            字符串类字典转JSON
            </summary>
            <param name="dicValues"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.Serialization.JSONConverterExtensions.ToDictionayWithJSON(System.String)">
            <summary>
            JSON转字符串类字典
            </summary>
            <param name="dicValues"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.Serialization.XmlConverterExtensions.RenderSimpleXmlNodesString(System.Collections.Generic.Dictionary{System.String,System.String},System.Text.StringBuilder)">
            <summary>
            字符串类字典转XML的节点名和节点值
            </summary>
            <param name="dicValues"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.Serialization.XmlConverterExtensions.RenderFullXmlNodesString(System.Collections.Generic.Dictionary{System.String,System.String},System.Text.StringBuilder)">
            <summary>
            字符串类字典转XML节点名和节点InnerXml
            </summary>
            <param name="dicValues"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.Serialization.XmlConverterExtensions.RenderSimpleXmlPropertysString(System.Collections.Generic.Dictionary{System.String,System.String},System.Text.StringBuilder)">
            <summary>
            字符串类字典转XML
            </summary>
            <param name="dicValues"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.Serialization.XmlConverterExtensions.ToDictionayWithXmlNodes(System.String)">
            <summary>
            Xml节点序列转字符串类字典
            </summary>
            <param name="dicValues"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.Serialization.XmlConverterExtensions.ToDictionayWithXmlPropertys(System.String)">
            <summary>
            Xml属性序列转字符串类字典
            </summary>
            <param name="dicValues"></param>
            <returns></returns>
        </member>
        <member name="P:Eastcom.WFS.SOAService.ResponseHeader.BasicResultCodeValue">
            <summary>
            请求结果状态码(只识别整个请求过程中的状态，不带业务特性)，使用BasicResultCode系列枚举值
            </summary>
        </member>
        <member name="P:Eastcom.WFS.SOAService.ResponseHeader.ResponseMessageCodeValue">
            <summary>
            处理方的响应结果状态码(不同业务判定特性返回不同值，约定的范围值为:0~199代表忽略处理并返回空数据，200以上代表正常响应，小于0表示出错)
            </summary>
        </member>
        <member name="P:Eastcom.WFS.SOAService.ResponseHeader.ResponseDebugMessage">
            <summary>
            ResponseMessageCodeValue>=400时，响应方提供的用于排障用的调试消息或提示信息
            </summary>
        </member>
        <!-- 对于成员“P:Eastcom.WFS.SOAService.ResponseHeader.IsNoData”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Eastcom.WFS.SOAService.ResponseHeader.IsGoodData”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Eastcom.WFS.SOAService.ResponseHeader.HasError”忽略有格式错误的 XML 注释 -->
        <member name="P:Eastcom.WFS.SOAService.SOAResponse.Header">
            <summary>
            响应头
            </summary>
        </member>
        <member name="P:Eastcom.WFS.SOAService.SOAResponse.Data">
            <summary>
            响应数据内容
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.Invalid">
            <summary>
            无效调用
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.NoSOAService">
            <summary>
            无服务总线服务
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.NoSystemEntry">
            <summary>
            无对应系统标识
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.NoServiceEntry">
            <summary>
            无对应服务标识/业务动作
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.NoAccess">
            <summary>
            无权限
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.InvalidParamFormat">
            <summary>
            无效参数结构
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.InvalidParamValue">
            <summary>
            非法参数值
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.Timeout">
            <summary>
            调用超时
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.Exception">
            <summary>
            调用后执行过程中出现异常
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.InvalidResultFormat">
            <summary>
            无效结果格式
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.InvalidResultValue">
            <summary>
            无效结果值
            </summary>
        </member>
        <member name="F:Eastcom.WFS.SOAService.BasicResultCode.Success">
            <summary>
            成功调用
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSDB.SqlReturnState">
            <summary>
            SQL执行动作记录体能记录的返回状态
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSDB.SqlRunTimeNote">
            <summary>
            SQL执行动作记录体
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlRunTimeNote.AppendLine(Eastcom.WFS.WFSDB.SqlReturnState,System.String,System.Object[])">
            <summary>
            追加消息行
            </summary>
            <param name="state">当前状态</param>
            <param name="messageFormat">消息体</param>
            <param name="messageArgs">消息体填充参数</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlRunTimeNote.AppendLine(Eastcom.WFS.WFSDB.SqlReturnState,System.Exception,System.String,System.Object[])">
            <summary>
            追加消息
            </summary>
            <param name="state">当前状态</param>
            <param name="e">捕获的异常对象体</param>
            <param name="messageFormat">消息体</param>
            <param name="messageArgs">消息体填充参数</param>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.SqlRunTimeNote.State">
            <summary>
            执行结果状态，可取到最后一次结果状态的值，赋值时，会把状态字符串显示在消息中
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.SqlRunTimeNote.Message">
            <summary>
            所有追加的执行状态描述消息,采用追加行赋值的模式，即赋值时，会追加消息到原消息后面
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.SqlRunTimeNote.LastMessage">
            <summary>
            最后一次追加的消息
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.SqlRunTimeNote.E">
            <summary>
            操作中catch到的主要异常
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.SqlRunTimeNote.AllExceptions">
            <summary>
            发生过的所有异常
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSDB.ITableRecordObject">
            <summary>
            表/视图对象的实体类型基类接口
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITableRecordObject.NoticeKeyColumnDatasChanged">
            <summary>
            让各主键标识为数据已经改变了,让各主键列的值进入实现增删改的参数列表中
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITableRecordObject.Insert">
            <summary>
            赋到非空属性上的各值(可为空且未赋值的属性,全用null值)合为一条记录插入数据库
            </summary>
            <remarks>同InsertWithNull,如果有非空字段,请注意同另一个方法InsertWithAllProperty的区别
            支持使用Dbo.StartTransaction(SqlRunTimeNote note)/Insert/其它操作.../Dbo.CommitTransaction(SqlRunTimeNote note)组合
            ,来实现同其它动作组合到一个事务中执行
            </remarks>
            <returns>返回是否插入成功,可以使用当前实例的Note属性获取更多内部运行状态信息</returns>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITableRecordObject.InsertWithNull">
            <summary>
            赋到非空属性上的各值(可为空且未赋值的属性,全用null值)合为一条记录插入数据库
            </summary>
            <remarks>如果有非空字段,请注意同另一个方法InsertWithAllProperty的区别
            支持使用Dbo.StartTransaction(SqlRunTimeNote note)/Insert/其它操作.../Dbo.CommitTransaction(SqlRunTimeNote note)组合
            ,来实现同其它动作组合到一个事务中执行
            </remarks>
            <returns>返回是否插入成功,可以使用当前实例的Note属性获取更多内部运行状态信息</returns>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITableRecordObject.InsertWithAllProperty">
            <summary>
            将赋到所有属性上的各值(若有属性未赋值,将会插入失败)合为一条记录插入数据库
            </summary>
            <remarks>如果有非空字段,请注意同另一个方法InsertWithNull的区别
            支持使用Dbo.StartTransaction(SqlRunTimeNote note)/Insert/其它操作.../Dbo.CommitTransaction(SqlRunTimeNote note)组合
            ,来实现同其它动作组合到一个事务中执行
            </remarks>
            <returns>返回是否插入成功,可以使用当前实例的Note属性获取更多内部运行状态信息</returns>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITableRecordObject.Update">
            <summary>
            将赋到属性上的各值更新到对应记录，注意：执行操作前，务必确保主键各列对应的属性值是正确的
            </summary>
            <remarks>支持使用Dbo.StartTransaction(SqlRunTimeNote note)/Insert/其它操作.../Dbo.CommitTransaction(SqlRunTimeNote note)组合
            ,来实现同其它动作组合到一个事务中执行
            </remarks>
            <returns>返回是否更新成功,可以使用当前实例的Note属性获取更多内部运行状态信息</returns>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITableRecordObject.Delete">
            <summary>
            删除主键各列对应的数据库记录，注意：执行操作前，务必确保主键各列对应的属性值是正确的
            </summary>
            <remarks>支持使用Dbo.StartTransaction(SqlRunTimeNote note)/Insert/其它操作.../Dbo.CommitTransaction(SqlRunTimeNote note)组合
            ,来实现同其它动作组合到一个事务中执行
            </remarks>
            <returns>返回是否删除成功,可以使用当前实例的Note属性获取更多内部运行状态信息</returns>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITableRecordObject.LoadChangedParametersAndClear(System.Data.Common.DbCommand)">
            <summary>
            加载已经有变更的属性做为DbCommand cmd执行时参数,并且清空变更列表
            </summary>
            <param name="cmd">正在装载的执行体</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITableRecordObject.ReadUpdateParamSql">
            <summary>
            读取已经有变更的属性,组成的变更SQL参数组合字符串
            </summary>
            <returns>返回如同""IdentityID=@IdentityID,...""格式的字符串</returns>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.ITableRecordObject.Note">
            <summary>
            操作过程笔记
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.ITableRecordObject.MyQueryTableName">
            <summary>
            物理表/视图名称 $QueryTableName$
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.ITableRecordObject.MyDatabaseName">
            <summary>
            $QueryTableName$所在数据库名称
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSDB.TableRecord">
            <summary>
            表/视图对象的实体类型基类
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.TableRecord.LoadChangedParametersAndClear(System.Data.Common.DbCommand)">
            <summary>
            加载已经有变更的属性做为DbCommand cmd执行时参数,并且清空变更列表
            </summary>
            <param name="cmd">正在装载的执行体</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.TableRecord.ReadUpdateParamSql">
            <summary>
            读取已经有变更的属性,组成的变更SQL参数组合字符串
            </summary>
            <returns>返回如同"IdentityID=@IdentityID,..."格式的字符串</returns>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecord.MyDatabaseName">
            <summary>
            所在数据库名称
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSDB.TableRecords`1">
            <summary>
            记录的对象列表集合
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IWFSTableRecordPageHandler.CurrentPageIndex">
            <summary>
            当前页码，从1开始
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IWFSTableRecordPageHandler.IsFirstPage">
            <summary>
            是否第一页
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IWFSTableRecordPageHandler.IsLastPage">
            <summary>
            是否最后一页
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IWFSTableRecordPageHandler.MaxPageIndex">
            <summary>
            最大页码，从1开始
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IWFSTableRecordPageHandler.NextPageIndex">
            <summary>
            下一页页码，从1开始
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IWFSTableRecordPageHandler.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IWFSTableRecordPageHandler.PrevPageIndex">
            <summary>
            上一页页码，从1开始
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IWFSTableRecordPageHandler.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.TableRecords`1.Fill(System.Data.DataSet,System.Int32@)">
            <summary>
            启动DataSet到对象的填充
            </summary>
            <param name="dataAndCountDataSet">包含查询数据和查询总量的双DataTable的DataSet</param>
            <param name="recordCount">要输出的记录总量</param>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.CurrentPageIndex">
            <summary>
            当前页码，从1开始
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.MaxPageIndex">
            <summary>
            最大页码，从1开始
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.NextPageIndex">
            <summary>
            下一页页码
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.PrevPageIndex">
            <summary>
            上一页页码
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.IsLastPage">
            <summary>
            是否最后一页
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.IsFirstPage">
            <summary>
            是否第一页
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.IsSingleMode">
            <summary>
            是否为单一记录模式，如果是，将只在集合中创建一个实例，
            注意：赋值true时，同时将TOP查询页大小置为1,否则还原成defaultTopSize字段的值
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.MyQueryTableName">
            <summary>
            物理表/视图名称
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.MyQuerySQL">
            <summary>
            查询语句
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.TableRecords`1.MyDatabaseName">
            <summary>
            所在数据库名称
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSDB.ConnectionStringsConfigNotExistException">
            <summary>
            连接字符串指定配置不存在的异常
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSDB.ConnectionStringsConfigNotExistException.ConfigXmlNodePath">
            <summary>
            配置节点名称
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ConnectionStringsConfigNotExistException.#ctor(System.String)">
            <summary>
            构造一个指定连接字符串名称的配置不存在的异常对象
            </summary>
            <param name="connectionStringName">连接字符串名称</param>
        </member>
        <member name="T:Eastcom.WFS.WFSDB.TransactionActWithObjectParam">
            <summary>
            带参的待执行事务动作
            </summary>
            <param name="note">记录体</param>
            <param name="param">参数</param>
            <returns>返回是否执行成功</returns>
        </member>
        <member name="T:Eastcom.WFS.WFSDB.ITransactionEntity">
            <summary>
            事务代理对象,用于辅助实现安全执行事务动作的封装体
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITransactionEntity.InvokeTransaction(Eastcom.WFS.WFSDB.TransactionActWithObjectParam,Eastcom.WFS.WFSDB.SqlRunTimeNote,System.Object)">
            <summary>
            将某个方法用事务包裹起来运行
            </summary>
            <param name="act">要运行的方法</param>
            <param name="note">用来记录运行过程的记录体</param>
            <param name="objectParam">要传递给方法的参数</param>
            <returns>返回是否成功执行</returns>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITransactionEntity.RollbackTransaction(Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            回滚事务
            </summary>
            <param name="note">执行过程记录体</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.ITransactionEntity.CommitTransaction(Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            提交事务
            </summary>
            <param name="note">执行过程记录体</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.TransactionAgent.#ctor(Eastcom.WFS.WFSDB.ITransactionEntity,Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            构造一个事务代理对象
            </summary>
            <param name="entity">支持事务操作接口的数据库操作对象</param>
            <param name="note">执行过程记录体</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.TransactionAgent.Dispose">
            <summary>
            在析构时,对当前事务代理对象中绑定的执行体执行提交事务动作
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.IDatabaseEntity.ClearCount">
            <summary>
            清除计数器
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IDatabaseEntity.QueryCount">
            <summary>
            查询次数
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IDatabaseEntity.QueryTotalSeconds">
            <summary>
            查询总耗秒数
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IDatabaseEntity.ExecuteCount">
            <summary>
            更新次数
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IDatabaseEntity.ExecuteTotalSeconds">
            <summary>
            更新总耗秒数
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IDatabaseEntity.ErrorCount">
            <summary>
            出错次数
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSDB.IDatabaseEntity.WarnCount">
            <summary>
            警告次数
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity">
            <summary>
            操作SqlServer数据库实例的通用操作的封装器，目标是解决性能问题和有限的数据库连接池的资源问题，
            并提供有效且方便的事务日志的处理机制
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.transaction">
            <summary>
            数据更新事务句柄
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.conn">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.queryCommandTimeOut">
            <summary>
            查询执行的超时时间
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.connString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.transactionIsAborted">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.#ctor(System.String)">
            <summary>
            按照指定连接字符串名称对应的配置来构造实例
            </summary>
            <param name="connectionStringName">连接字符串名称</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.ToConnect(System.String)">
            <summary>
            按照指定连接字符串名称对应的配置来填充实例中的连接对象,
            此时创建的连接对象主要用于启动事务后的单一连接
            </summary>
            <param name="connectionStringName"></param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.Dispose">
            <summary>
                释构函数
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.Dispose(System.Boolean)">
            <summary>
            	释构函数——释放所有的实例
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.KeepOpenConnection(System.Data.Common.DbConnection,Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            确保打开连接
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.KeepOpenConnection(Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            确保打开连接
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.InvokeTransaction(Eastcom.WFS.WFSDB.TransactionActWithObjectParam,Eastcom.WFS.WFSDB.SqlRunTimeNote,System.Object)">
            <summary>
            将某个方法用事务包裹起来运行
            </summary>
            <param name="act">要运行的方法</param>
            <param name="note">用来记录运行过程的记录体</param>
            <param name="objectParam">要传递给方法的参数</param>
            <returns>返回是否成功执行</returns>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.StartTransaction(Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            启动事务
            </summary>
            <param name="note">用来记录运行过程的记录体</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.RollbackTransaction(Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            回滚事务
            </summary>
            <param name="note">用来记录运行过程的记录体</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.CommitTransaction(Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            提交事务
            </summary>
            <param name="note">用来记录运行过程的记录体</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.ExecuteCommand(System.Data.Common.DbCommand,Eastcom.WFS.WFSDB.SqlRunTimeNote,System.Data.Common.DbParameter[])">
            <summary>
            执行cmd,填充结果到DataSet
            </summary>
            <remarks>
            默认不在事务中,如果要使用事务,请使用变量conn来做为链接字符串,并且不要Dispose,
            再用transaction变量关联事务
            并且先做transactionIsAborted(事务是否已经处于被放弃的状态),
            再做transaction != null(表示已经启用事务,并且未提交)的判定
            再catch到异常后主动Rollback
            </remarks>
            <param name="selectCommand">要执行的命令动作</param>
            <param name="dataSet">要填充的目标DataSet</param>
            <param name="note">用来记录运行过程的记录体</param>
            <param name="sqlParams">需要传递的SQL参数集合</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.ExecuteCommand(System.Data.Common.DbCommand,System.Data.DataSet,Eastcom.WFS.WFSDB.SqlRunTimeNote,System.Data.Common.DbParameter[])">
            <summary>
            执行cmd,填充结果到DataSet
            </summary>
            <remarks>
            默认不在事务中,如果要使用事务,请使用变量conn来做为链接字符串,并且不要Dispose,
            再用transaction变量关联事务
            并且先做transactionIsAborted(事务是否已经处于被放弃的状态),
            再做transaction != null(表示已经启用事务,并且未提交)的判定
            再catch到异常后主动Rollback
            </remarks>
            <param name="selectCommand"></param>
            <param name="dataSet"></param>
            <param name="note"></param>
            <param name="sqlParams"></param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.ExecuteScalar(System.Data.Common.DbCommand,Eastcom.WFS.WFSDB.SqlRunTimeNote,System.Data.Common.DbParameter[])">
            <summary>
            执行,返回单个值
            </summary>
            <remarks>
            默认不在事务中,如果要使用事务,请使用变量conn来做为链接字符串,并且不要Dispose,
            再用transaction变量关联事务
            并且先做transactionIsAborted(事务是否已经处于被放弃的状态),
            再做transaction != null(表示已经启用事务,并且未提交)的判定
            再catch到异常后主动Rollback
            </remarks>
            <param name="selectCommand"></param>
            <param name="note"></param>
            <param name="sqlParams"></param>
            <returns></returns>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.UnParseParammeters(System.Data.Common.DbCommand,Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            将指定命令体,模拟尝试转换仅供参考的SQL指令
            </summary>
            <param name="cmd">要执行的命令动作</param>
            <param name="note">用来记录运行过程的记录体</param>
            <returns>返回模拟仅供参考的SQL</returns>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.SelectTableRecordFromMetaData(System.String,System.Int32@,Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            使用当前数据库,读取指定物理表的当前记录数，如果不是物理表，或对应物理表不存在于当前数据库中，将输出记录数为-1
            </summary>
            <param name="tableName">物理表表名</param>
            <param name="rowsCount">要输出的记录数</param>
            <param name="note">操作便签</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.SelectTableRecordFromMetaData(System.String,System.String,System.Int32@,Eastcom.WFS.WFSDB.SqlRunTimeNote)">
            <summary>
            使用dbNameUseSql的use语句来修改当前数据库,读取指定物理表的当前记录数，如果不是物理表，或对应物理表不存在于当前数据库中，将输出记录数为-1
            </summary>
            <param name="dbNameUseSql">切换数据库的use语句</param>
            <param name="tableName">物理表表名</param>
            <param name="rowsCount">要输出的记录数</param>
            <param name="note">操作便签</param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.Select(Eastcom.WFS.WFSDB.IWFSTableRecordFiller,System.String,System.String,System.Boolean,System.String,System.Int32@,System.Data.Common.DbParameter[])">
            <summary>
            是T_开头的基本表,并且没有where条件时,执行直接从数据库元数据读取记录数
            </summary>
            <param name="records"></param>
            <param name="recordSqlT"></param>
            <param name="countSqlT"></param>
            <param name="hasWhereSql"></param>
            <param name="queryTableName"></param>
            <param name="recordCount"></param>
            <param name="sqlParams"></param>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlServerDatabaseEntity.Select(Eastcom.WFS.WFSDB.IWFSTableRecordFiller,System.String,System.String,System.String,System.Boolean,System.String,System.Int32@,System.Data.Common.DbParameter[])">
            <summary>
            是T_开头的基本表,并且没有where条件时,执行直接从数据库元数据读取记录数
            </summary>
            <param name="records"></param>
            <param name="dbNameUseSql"></param>
            <param name="recordSqlT"></param>
            <param name="countSqlT"></param>
            <param name="hasWhereSql"></param>
            <param name="queryTableName"></param>
            <param name="recordCount"></param>
            <param name="sqlParams"></param>
        </member>
        <member name="T:Eastcom.WFS.WFSDB.SqlParser">
            <summary>
            SQL解析与分析处理器,暂只实现order by的组装
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSDB.SqlParser.BuildNewOrderBySql(System.String,System.String,System.String)">
            <summary>
            order by的组装
            </summary>
            <param name="oldOrderBySQL">原来的排序</param>
            <param name="newOrderBySQL">新的排序</param>
            <param name="defaultOrderBySQL">默认优先的排序</param>
            <returns></returns>
        </member>
        <member name="T:Eastcom.WFS.WFSLog.LogWriterBase">
            <summary>
            日志填写器的虚拟基类
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogWriterBase.CsvLogFileHeader">
            <summary>
            CsvLog类型的文件的日志格式头行
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogWriterBase.CsvLogLineTemplate">
            <summary>
            CsvLog类型的文件的日志格式模板
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.LogWriterBase.ReadCsvLogLine(System.String,Eastcom.WFS.WFSLog.LogRecordLevel,System.String,System.Object[])">
            <summary>
            将日志消息转换为CSV格式的可存储日志文本
            </summary>
            <param name="typeGroup">提醒级别特性，由LogRecordLevel枚举中的值进行或运算来组合，
            <param name="logCategoryLabel">日志分类标识,用于对某类日志进行归总，从而进行更复杂的下一步处理提供判定依据</param>
            如LogRecordLevel.ImportantActDone|LogRecordLevel.Warn</param>
            <param name="logTemplate">日志内容模板，支持String.Format格式化参数</param>
            <param name="logParams">往日志内容模板中填充的参数</param>
            <returns>CSV格式的可存储日志文本</returns>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.LogWriterBase.ReadCsvLogLine(System.DateTime,System.String,Eastcom.WFS.WFSLog.LogRecordLevel,System.String,System.Object[])">
            <summary>
            拼装满足CSV格式的日志内容
            </summary>
            <param name="time">日志发生时间</param>
            <param name="typeGroup">提醒级别特性，由LogRecordLevel枚举中的值进行或运算来组合，
            <param name="logCategoryLabel">日志分类标识,用于对某类日志进行归总，从而进行更复杂的下一步处理提供判定依据</param>
            如LogRecordLevel.ImportantActDone|LogRecordLevel.Warn</param>
            <param name="logTemplate">日志内容模板，支持String.Format格式化参数</param>
            <param name="logParams">往日志内容模板中填充的参数</param>
            <returns>日志文件，后面自带换行</returns>
        </member>
        <member name="P:Eastcom.WFS.WFSLog.LogWriterBase.UserInfo">
            <summary>
            获取或设置日志里显示用户信息
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSLog.ILogWriter">
            <summary>
            一般日志类型
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.ILogWriter.WriteRecord(Eastcom.WFS.WFSLog.LogRecordLevel,System.String,System.Object[])">
            <summary>
            发出写日志的请求,使用默认分类"默认类型"
            </summary>
            <param name="typeGroup">提醒级别特性，由LogRecordLevel枚举中的值进行或运算来组合，
            如LogRecordLevel.ImportantActDone|LogRecordLevel.Warn表示有关重要或特权动作的一个警告信息</param>
            <param name="logTemplate">日志内容模板，支持String.Format格式化参数</param>
            <param name="logParams">往日志内容模板中填充的参数</param>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.ILogWriter.WriteRecord(System.String,Eastcom.WFS.WFSLog.LogRecordLevel,System.String,System.Object[])">
            <summary>
            发出写日志的请求
            </summary>
            <param name="typeGroup">提醒级别特性，由LogRecordLevel枚举中的值进行或运算来组合，
            <param name="logCategoryLabel">日志分类标识,用于对某类日志进行归总，从而进行更复杂的下一步处理提供判定依据</param>
            如LogRecordLevel.ImportantActDone|LogRecordLevel.Warn</param>
            <param name="logTemplate">日志内容模板，支持String.Format格式化参数</param>
            <param name="logParams">往日志内容模板中填充的参数</param>
        </member>
        <member name="T:Eastcom.WFS.WFSLog.ILogPathWriter">
            <summary>
            可指定存储路径的日志类型
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.ILogPathWriter.WriteRecord(Eastcom.WFS.WFSLog.LogRecordLevel,System.String,System.Object[])">
            <summary>
            发出写日志的请求,使用默认分类"默认类型"
            </summary>
            <param name="typeGroup">提醒级别特性，由LogRecordLevel枚举中的值进行或运算来组合，
            如LogRecordLevel.ImportantActDone|LogRecordLevel.Warn表示有关重要或特权动作的一个警告信息</param>
            <param name="logTemplate">日志内容模板，支持String.Format格式化参数</param>
            <param name="logParams">往日志内容模板中填充的参数</param>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.ILogPathWriter.WriteRecord(System.String,Eastcom.WFS.WFSLog.LogRecordLevel,System.String,System.Object[])">
            <summary>
            发出写日志的请求
            </summary>
            <param name="typeGroup">提醒级别特性，由LogRecordLevel枚举中的值进行或运算来组合，
            <param name="logCategoryLabel">日志分类标识,用于对某类日志进行归总，从而进行更复杂的下一步处理提供判定依据</param>
            如LogRecordLevel.ImportantActDone|LogRecordLevel.Warn</param>
            <param name="logTemplate">日志内容模板，支持String.Format格式化参数</param>
            <param name="logParams">往日志内容模板中填充的参数</param>
        </member>
        <member name="T:Eastcom.WFS.WFSLog.ILogRedirectSavePathWriter">
            <summary>
            转储的日志类型
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.ILogRedirectSavePathWriter.WriteRecord(Eastcom.WFS.WFSLog.LogRecordLevel,System.String,System.Object[])">
            <summary>
            发出写日志的请求,使用默认分类"默认类型"
            </summary>
            <param name="typeGroup">提醒级别特性，由LogRecordLevel枚举中的值进行或运算来组合，
            如LogRecordLevel.ImportantActDone|LogRecordLevel.Warn表示有关重要或特权动作的一个警告信息</param>
            <param name="logTemplate">日志内容模板，支持String.Format格式化参数</param>
            <param name="logParams">往日志内容模板中填充的参数</param>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.ILogRedirectSavePathWriter.WriteRecord(System.String,Eastcom.WFS.WFSLog.LogRecordLevel,System.String,System.Object[])">
            <summary>
            发出写日志的请求
            </summary>
            <param name="typeGroup">提醒级别特性，由LogRecordLevel枚举中的值进行或运算来组合，
            <param name="logCategoryLabel">日志分类标识,用于对某类日志进行归总，从而进行更复杂的下一步处理提供判定依据</param>
            如LogRecordLevel.ImportantActDone|LogRecordLevel.Warn</param>
            <param name="logTemplate">日志内容模板，支持String.Format格式化参数</param>
            <param name="logParams">往日志内容模板中填充的参数</param>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.ILogRedirectSavePathWriter.WriteRecord(System.DateTime,System.String,Eastcom.WFS.WFSLog.LogRecordLevel,System.String,System.Object[])">
            <summary>
            发出写日志的请求
            </summary>
            <param name="time">日志产生时间，用于写在日志行的最前面</param>
            <param name="typeGroup">提醒级别特性，由LogRecordLevel枚举中的值进行或运算来组合，
            <param name="logCategoryLabel">日志分类标识,用于对某类日志进行归总，从而进行更复杂的下一步处理提供判定依据</param>
            如LogRecordLevel.ImportantActDone|LogRecordLevel.Warn</param>
            <param name="logTemplate">日志内容模板，支持String.Format格式化参数</param>
            <param name="logParams">往日志内容模板中填充的参数</param>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.CSVFileLogWriter.InitLogFileAndDirectory(System.String,System.String)">
            <summary>
            初始创建csv日志文件,并注入csv表头行
            </summary>
            <param name="filePath">日志文件路径</param>
            <param name="directoryPath">日志文件所在目录路径</param>
            <returns>是否成功创建csv日志文件</returns>
        </member>
        <member name="P:Eastcom.WFS.WFSLog.CSVFileLogWriter.FileTimeFormat">
            <summary>
            日志保存文件名,通过时间转换的格式化字符串,默认为yyyyMMdd.csv
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSLog.CSVFileLogWriter.SaveFileName">
            <summary>
            日志保存完整文件名
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSLog.CSVFileLogWriter.SaveDirectory">
            <summary>
            日志保存文件夹
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSLog.CSVFileLogWriter.Path">
            <summary>
            日志保存的文件路径
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSLog.LogFactory">
            <summary>
            日志操作工厂入口类
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogFactory.DefaultLabel">
            <summary>
            修改此属性,来决定默认写日志的标签
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.LogFactory.NewLogWriter">
            <summary>
            新创建一个日志填写器
            </summary>
            <returns></returns>
        </member>
        <member name="P:Eastcom.WFS.WFSLog.LogFactory.UpUpLevel">
            <summary>
            修改此属性,用来决定向上归并文件夹的层次
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSLog.LogFactory.LogDirectoryPathTemplate">
            <summary>
            支持用{0}代替当前应用的AppDomain.CurrentDomain.BaseDirectory
            </summary>
        </member>
        <member name="P:Eastcom.WFS.WFSLog.LogFactory.LogDirectory">
            <summary>
            写日志的文件夹,以"\"结束
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSLog.LogWriterType">
            <summary>
            日志工厂支持的日志类型
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogWriterType.Default">
            <summary>
            当前默认采用WindowsMessageQueue
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogWriterType.CSVFile">
            <summary>
            按CSV格式记录到日志文件
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogWriterType.WindowsMessageQueue">
            <summary>
            通过windows操作系统的消息队列的消息传送机制，实现统一的日志存取，
            1.自动支持消息队列机制的支持,若不支持,就直接改为写文件
            2.自动支持将提醒类Alert,AlertNow两种消息自动同时写入数据库
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WFSLog.LogRecordLevel">
            <summary>
            按照以下二进制位的对应关系来确定各种级别特性
            1       1     1    1        1     1                1            1
            |Destroy|Error|Warn|AlertNow|Alert|ImportantActDone|RunStateView|CommonActDone|Info
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.Info">
            <summary>
            默认情况，仅用于无任何特殊特征或不确定特征且不需要特别关注的一个日志消息
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.CommonActDone">
            <summary>
            操作重要级别：普通操作，某个操作步骤或某个动作执行完毕，仅作为记录的一个消息
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.RunStateView">
            <summary>
            操作重要性级别：运行状态监测，主要用于后台长时间运行或定期运行的程序，打日志用以表达自身的运行状态
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.ImportantActDone">
            <summary>
            操作重要性级别：重要或特权操作，用户的某个重要操作，一般是指那些特权操作
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.Alert">
            <summary>
            提醒级别：暂存提醒内容，待后续人工来定期关注
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.AlertNow">
            <summary>
            提醒级别：马上发放提醒
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.Warn">
            <summary>
            出错级别：警告，可能有严重问题，有待排查，需要解除掉，不允许长时间出现，但还不至于造成软件完全不可用
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.Error">
            <summary>
            出错级别：出错，直接影响软件使用的严重问题
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.Destroy">
            <summary>
            出错级别：完全失效，软件完全失效的大故障
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.ImportantActDoneWithErrorAndAlertNow">
            <summary>
            常见组合级别：重要操作出错，马上发放提醒
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.ImportantActDoneWithDestroyAndAlertNow">
            <summary>
            常见组合级别：重要操作完全失效，马上发放提醒
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.CommonActDoneWithErrorAndAlert">
            <summary>
            常见组合级别：一般操作出错，暂存提醒内容
            </summary>
        </member>
        <member name="F:Eastcom.WFS.WFSLog.LogRecordLevel.CommonActDoneWithDestroyAndAlert">
            <summary>
            常见组合级别：一般操作完全失效，暂存提醒内容
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WFSLog.WindowsMessageQueueLogWriter.#ctor">
            <summary>
            检测是否可以连接到队列,如果不能正常连接,就改用CSVFileLogWriter来写日志
            </summary>
        </member>
        <member name="T:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase">
            <summary>
            WCF服务基类，暂不启用
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.#ctor">
            <summary>
            构造函数，默认支持HTTPGet方式的访问
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.#ctor(System.Boolean)">
            <summary>
            构造函数，可指定是否支持HTTPGet方式的访问
            </summary>
            <param name="httpGetEnabled">指定是否支持HTTPGet方式的访问</param>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.AddServer(System.String,System.String,System.Type,System.Type)">
            <summary>
            新建一个新的服务，但此时还未启动，需要调用StartAllService方法来启动 
            </summary>
            <param name="serverUrl">服务访问的URL,包括访问域名和端口号，等同于IIS中站点的概念</param>
            <param name="serverName">服务名称，类似于IIS中虚拟目录的概念</param>
            <param name="serviceType">提供服务的Class类型</param>
            <param name="serviceInterface">提供服务的服务接口的Class类型</param>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.StartAllService">
            <summary>
            启动所有已经装载的服务
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.StopAllService">
            <summary>
            停止所有已经装载的服务
            </summary>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.Host_UnknownMessageReceived(System.Object,System.ServiceModel.UnknownMessageReceivedEventArgs)">
            <summary>
            接收到未知格式消息时的处理函数
            </summary>
            <param name="sender">服务主机对象</param>
            <param name="e">事件信息</param>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.Host_Opening(System.Object,System.EventArgs)">
            <summary>
            主机开始运行时的处理函数
            </summary>
            <param name="sender">服务主机对象</param>
            <param name="e">事件信息</param>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.Host_Opened(System.Object,System.EventArgs)">
            <summary>
            主机已经正常开始运行的处理函数
            </summary>
            <param name="sender">服务主机对象</param>
            <param name="e">事件信息</param>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.Host_Faulted(System.Object,System.EventArgs)">
            <summary>
            主机启动出错的处理函数
            </summary>
            <param name="sender">服务主机对象</param>
            <param name="e">事件信息</param>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.Host_Closing(System.Object,System.EventArgs)">
            <summary>
            主机开始关闭的处理函数
            </summary>
            <param name="sender">服务主机对象</param>
            <param name="e">事件信息</param>
        </member>
        <member name="M:Eastcom.WFS.WorkFlowEngine.WCFService.WCFServcieBase.Host_Closed(System.Object,System.EventArgs)">
            <summary>
            主机已经关闭的处理函数
            </summary>
            <param name="sender">服务主机对象</param>
            <param name="e">事件信息</param>
        </member>
    </members>
</doc>
